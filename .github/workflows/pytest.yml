---
name: pytest

on:
  push:
  pull_request:
  workflow_dispatch:

permissions: {}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    services:
      openobserve:
        image: public.ecr.aws/zinclabs/openobserve:v0.14.7
        ports:
          - 5080:5080
        env:
          ZO_ROOT_USER_EMAIL: root@example.com
          ZO_ROOT_USER_PASSWORD: Complexpass#123
        options: >-
          --health-cmd="curl --fail http://localhost:5080/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # tag=v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # tag=v5.6.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          set -x
          pip install -e '.[all]'
          pip install -r requirements-dev.txt

      - name: Set .env for online tests
        run: |
          set -x
          cat > .env <<EOF
          OPENOBSERVE_URL = "http://localhost:5080"
          OPENOBSERVE_USER = "root@example.com"
          OPENOBSERVE_PASS = "Complexpass#132"
          EOF
          cat .env

      - name: Test with pytest
        run: |
          [ -f .env ] && pytest tests/test_openobserve_api.py --doctest-modules --junitxml=junit/test-${{ matrix.python-version }}-results.xml --cov=com --cov-report=xml --cov-report=html
          pytest tests/test_*offline.py --doctest-modules --junitxml=junit/test-${{ matrix.python-version }}-results.xml --cov=com --cov-report=xml --cov-report=html
        if: ${{ always() }}

      - name: Upload pytest test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # tag=v4.6.2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-${{ matrix.python-version }}-results.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
